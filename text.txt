
# Define the path to the input file
$filePath = "C:\Path\To\servers.txt"  # Replace with the path to your text file

# Read the server and serial number list from the file
$entries = Import-Csv -Path $filePath -Header ServerName, SerialNumber -Delimiter ','

# Script block to delete the certificate
$deleteCertScript = {
    param(
        [string]$serialNumber,
        [string]$storeName,
        [string]$storeLocation
    )

    try {
        # Open the certificate store
        $certStore = New-Object System.Security.Cryptography.X509Certificates.X509Store($storeName, $storeLocation)
        $certStore.Open("ReadWrite")

        # Find the certificate by serial number
        $certToDelete = $certStore.Certificates | Where-Object {
            $_.SerialNumber -replace ' ', '' -eq $serialNumber -replace ' ', ''
        }

        if ($certToDelete) {
            # Delete the certificate
            foreach ($cert in $certToDelete) {
                $certStore.Remove($cert)
                Write-Output "Deleted certificate with Serial Number $serialNumber"
            }
        } else {
            Write-Output "Certificate with Serial Number $serialNumber not found."
        }

        # Close the certificate store
        $certStore.Close()
    } catch {
        Write-Output "Error: $($_.Exception.Message)"
    }
}

# Iterate over each entry in the list
foreach ($entry in $entries) {
    $server = $entry.ServerName
    $serialNumber = $entry.SerialNumber

    Write-Output "Connecting to $server..."

    try {
        Invoke-Command -ComputerName $server -ScriptBlock $deleteCertScript -ArgumentList $serialNumber, "My", "LocalMachine" -ErrorAction Stop |
        ForEach-Object {
            Write-Output "[$server] $_"
        }
    } catch {
        Write-Output "[$server] Error: $($_.Exception.Message)"
    }
}
